Los nodos tienen que apuntar a un Object? -A un T
los comparadores comparan Object? Eso es posible? -Si
Está bien que deleteAllOccurrences elimine usando un comparator??? Que tiene que eliminar? Tiene que eliminar todo el nodo, pero lo hicimos comparando los alumnos.
Constante en codigo de grupo

--------------------------------------------------------

Hola, Andrés y Facundo!

Lamentablemente, va a ser necesaria una re-entrega del trabajo. Les dejo unos comentarios sobre los puntos a corregir, los señalados en negrita son los más graves, pero recomiendo corregir todos:

V Lista: debe almacenar sólo un nodo (el primero de la lista), no hace falta ninguno más, 
	mucho menos si van a almacenar los dos el mismo nodo. El atributo auxToString no 
	debe ser parte de la lista.
	
V Lista reOrdenarPor(Comparator<Object> comp): lo ideal es que desde afuera se acceda 
	al setComparador y este, luego de setarlo, realice el llamado al reordenar.

V Lista cantNodos: si la cantidad de nodos es un atributo que se suma/resta cada vez que 
	se agrega/elimina un nodo, no es necesario recorrer cada vez que se necesita la 
	cantidad de nodos.
	
- Iterador: el iterador debería recibir por parámetro el primer nodo de la lista. 
	Recomiendo hacer el Iterador en una clase a parte.
	
- Grupo: la lista de elementos dentro del grupo puede ser un Arraylist. De utilizar 
	una lista vinculada deben especificar el tipo (Lista<ElemUniversidad>) y NO 
	hacer casting en los métodos. Falta implementar el equals.
	
- Comparadores: Hacer cada comparador del tipo que se necesita. Evitar casting.

Saludos!

- Pasar todo a tipo T